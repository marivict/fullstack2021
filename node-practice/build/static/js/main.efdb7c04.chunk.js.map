{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleOfImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNotes","setNewNotes","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteServices","notesToShow","filter","map","find","n","changeNote","catch","error","setTimeout","console","log","onSubmit","e","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","onChange","event","target","value","type","ReactDOM","render","document","getElementById"],"mappings":"4KAaeA,EAXF,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,mBACbC,EAASF,EAAKG,UAAY,qBAAuB,iBAErD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAsCC,Q,gBCPxCK,EAAU,aAwBD,EAtBA,WASX,OARgBC,IAAMC,IAAIF,GAQXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACC,EAAWE,GAEvB,OADgBP,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCN9BK,EAdM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEnB,OAAe,OAAZA,EACQ,KAIP,qBAAKd,UAAU,QAAf,SACKc,KCQEC,EAhBA,WAQX,OACI,sBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACI,uBACA,2GCuFGC,EA7FH,SAACC,GAEX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,IAEC1B,MAAM,SAAAC,GACLiB,EAASjB,QAEV,IAEH,IAsBM0B,EAAcN,EAChBJ,EACAA,EAAMW,QAAO,SAAAtC,GAAI,OAAIA,EAAKG,aA2B9B,OACE,gCACE,uCACA,cAAC,EAAD,CAAce,QAASe,IACvB,8BACA,yBAAQ3B,QAAS,WACf0B,GAAYD,IADd,kBAEUA,EAAU,YAAc,WAElC,6BACGM,EAAYE,KAAI,SAAAvC,GAAI,OACpB,cAAC,EAAD,CAECA,KAAMA,EACNC,mBAAqB,kBAvCF,SAACc,GAC1B,IAAOf,EAAO2B,EAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAE1B,KAAOA,KACjC2B,EAAU,2BAAO1C,GAAP,IAAaG,WAAYH,EAAKG,YAE9CiC,EACQM,EAAY3B,GACnBL,MAAK,SAAAC,GACJiB,EAASD,EAAMY,KAAI,SAAAvC,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAOW,SAEpDgC,OAAM,SAAAC,GACLV,EAAgB,UAAD,OACHlC,EAAKK,QADF,sCAIfwC,YAAW,WACTX,EAAgB,QACf,KAEHN,EAASD,EAAMW,QAAO,SAAAG,GAAC,OAAIA,EAAE1B,KAAOA,SAGtC+B,QAAQC,IAAI,iBAAmBhC,EAAK,wBAkBLd,CAAmBD,EAAKe,MAF5Cf,EAAKe,SAMd,uBAAMiC,SArEO,SAACC,GAChBA,EAAEC,iBACF,IAAMC,EAAa,CACjB9C,QAASwB,EACTuB,MAAM,IAAIC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,GAC3BzC,GAAIY,EAAM8B,OAAS,GAGrBrB,EACQe,GACPzC,MAAK,SAACC,GACLmC,QAAQC,IAAIpC,GACZiB,EAASD,EAAM+B,OAAO/C,IACtBmB,EAAY,QAuDZ,UACE,uBAAO6B,SApDY,SAACC,GACxB9B,EAAY8B,EAAMC,OAAOC,QAmDcA,MAAOjC,IAC1C,wBAAQkC,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MC1FNC,IAASC,OACP,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.efdb7c04.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({note, toggleOfImportance}) => {\r\n  const label =  note.important ? 'make not important' : 'make important'\r\n\r\n    return (\r\n      <li className='note'>\r\n        {note.content}\r\n        <button onClick={toggleOfImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    // const nonExistingNote = {\r\n    //     id:1000,\r\n    //     content: 'This note is not saved to server',\r\n    //     date: '2019-05-30T17:30:31.098Z',\r\n    //     important: true,\r\n    // }\r\n\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (newObject, id) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update\r\n}\r\n","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n\r\n    if(message === null) {\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notification ","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    \r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n\r\n    return(\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React,{useState, useEffect} from 'react'\r\nimport Note from './components/Note'\r\nimport noteServices from './services/notes'\r\nimport Notification from './components/Notification'\r\nimport Footer from  './components/Footer'\r\n\r\n\r\nconst App = (props) => {\r\n\r\n  const [notes, setNotes] = useState([])\r\n  const [newNotes, setNewNotes] = useState()\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteServices\r\n    .getAll()\r\n    .then( response => {\r\n      setNotes(response)\r\n    } )\r\n  }, [])\r\n\r\n  const addNotes = (e) =>{\r\n    e.preventDefault()\r\n    const noteObject = {\r\n      content: newNotes,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n      id: notes.length + 1\r\n    }\r\n\r\n    noteServices\r\n    .create(noteObject)\r\n    .then((response) => {\r\n      console.log(response)\r\n      setNotes(notes.concat(response))\r\n      setNewNotes('')\r\n    })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNotes(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll \r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  const toggleOfImportance = (id) => {\r\n    const  note = notes.find(n => n.id === id)\r\n    const changeNote = {...note, important: !note.important}\r\n\r\n    noteServices\r\n    .update(changeNote, id)\r\n    .then(response => {\r\n      setNotes(notes.map(note => note.id !== id ? note : response))\r\n    })\r\n    .catch(error => {\r\n      setErrorMessage(\r\n        `Note: '${note.content}' was already removed from server`\r\n      )\r\n\r\n      setTimeout(()=>{\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n\r\n      setNotes(notes.filter(n => n.id !== id))\r\n    })\r\n\r\n    console.log('importance of ' + id + ' needs to be toggled')\r\n    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n      <button onClick={()=>{\r\n        setShowAll(!showAll)\r\n      }}>Show { showAll ? 'Important' : 'All'}</button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n         <Note \r\n          key={note.id} \r\n          note={note} \r\n          toggleOfImportance ={()=>toggleOfImportance(note.id)}  \r\n        />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNotes}>\r\n        <input onChange={handleNoteChange} value={newNotes} />\r\n        <button type=\"submit\">Save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />,\r\ndocument.getElementById('root')\r\n)"],"sourceRoot":""}